name: Metrics Stack Deployment CI

on:
  push:
    tags:
      - deploy-metrics*

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env:
          - ${{ startsWith(github.ref, 'refs/tags/deploy-metrics-org') && 'metrics-org' || 'metrics-net' }}
    environment: ${{ matrix.env }}
    concurrency: ${{ matrix.env }}
    steps:
      - name: Set various variable for staging deployment
        if: matrix.env == 'metrics-net'
        run: |
          echo "SSH_HOST=10.1.0.200" >> $GITHUB_ENV
          echo "SSH_PROXY_HOST=ovh2.openfoodfacts.org" >> $GITHUB_ENV
          echo "SSH_USERNAME=off" >> $GITHUB_ENV
      - name: Set various variable for production deployment
        if: matrix.env == 'metrics-org'
        run: |
          echo "SSH_HOST=10.1.0.201" >> $GITHUB_ENV
          echo "SSH_PROXY_HOST=ovh2.openfoodfacts.org" >> $GITHUB_ENV
          echo "SSH_USERNAME=off" >> $GITHUB_ENV

      - name: Checkout git repository
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ env.SSH_PROXY_HOST }}
          proxy_username: ${{ env.SSH_USERNAME }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: false
          script: |
            # Clone Git repository if not already there
            [ ! -d '${{ matrix.env }}' ] && git clone --depth 1 https://github.com/${{ github.repository }} ${{ matrix.env }} --no-single-branch 2>&1

            # Go to repository directory
            cd ${{ matrix.env }}

            # Fetch newest commits (in case it wasn't freshly cloned)
            git fetch --depth 1

            # Checkout current commit SHA
            git checkout -qf ${{ github.sha }}

      - name: Set environment variables
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ env.SSH_PROXY_HOST }}
          proxy_username: ${{ env.SSH_USERNAME }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: false
          script: |
            # Go to repository directory
            cd ${{ matrix.env }}/docker/metrics

            # new env
            rm .env
            touch .env
            # Set Docker Compose variables
            echo "RESTART_POLICY=always" >> .env
            echo "DOCKER_CLIENT_TIMEOUT=120" >> .env
            echo "COMPOSE_HTTP_TIMEOUT=120" >> .env
            echo "COMPOSE_PROJECT_NAME=metrics" >> .env
            echo "COMPOSE_PATH_SEPARATOR=;" >> .env
            echo "COMPOSE_FILE=docker-compose.yml;prod.yml" >> .env
            echo "TAG=sha-${{ github.sha }}" >> .env

            # App environment variables
            echo "DOCKER_INFLUXDB_INIT_PASSWORD=${{ secrets.DOCKER_INFLUXDB_INIT_PASSWORD }}" >> .env
            echo "INFLUX_EXPOSE=8087" >> .env
            echo "GRAFANA_EXPOSE=3001" >> .env

      - name: Create external Docker volumes
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ env.SSH_PROXY_HOST }}
          proxy_username: ${{ env.SSH_USERNAME }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: false
          script: |
            cd ${{ matrix.env }}/docker/metrics
            make create_external_volumes

      - name: Start services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ env.SSH_PROXY_HOST }}
          proxy_username: ${{ env.SSH_USERNAME }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: false
          script: |
            cd ${{ matrix.env }}/docker/metrics
            make hdown && \
            make up

      - name: Check services are up
        uses: appleboy/ssh-action@master
        if: ${{ always() }}
        id: livecheck
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ env.SSH_PROXY_HOST }}
          proxy_username: ${{ env.SSH_USERNAME }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: false
          script: |
            cd ${{ matrix.env }}
            exit_code=0
            for service in `docker-compose config  --service | tr '\n' ' '`; do 
              if [ -z `docker-compose ps -q $service` ] || [ -z `docker ps -q --no-trunc | grep $(docker-compose ${{ env.compose_args }} ps -q $service)` ]; then
                echo "$service: DOWN"
                exit_code=1
              else
                echo "$service: UP"
              fi
            done;
            exit $exit_code;

      - name: Cleanup obsolete Docker objects
        uses: appleboy/ssh-action@master
        if: ${{ always() }}
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ env.SSH_PROXY_HOST }}
          proxy_username: ${{ env.SSH_USERNAME }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: false
          script: |
            cd ${{ matrix.env }}/docker/metrics
            make prune
